# GitHub Actions Workflow is created for testing and preparing the plugin release in the following steps:
# - Validate Gradle Wrapper.
# - Run 'test' and 'verifyPlugin' tasks.
# - Run the 'buildPlugin' task and prepare artifact for further tests.
# - Run the 'runPluginVerifier' task.
#
# The workflow is triggered on push and pull_request events.
#
# GitHub Actions reference: https://help.github.com/en/actions
#
## JBIJPPTPL

name: Build
on:
  push:
    branches:
      - 'main'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  build:
    name: Build
    runs-on: ubuntu-24.04
    outputs:
      pluginVerifierHomeDir: ${{ steps.properties.outputs.pluginVerifierHomeDir }}
    steps:
      - name: Fetch Sources
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@748248ddd2a24f49513d8f472f81c3a07d4d50e1 # v4

      - name: Setup Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@748248ddd2a24f49513d8f472f81c3a07d4d50e1 # v4

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          echo "pluginVerifierHomeDir=~/.pluginVerifier" >> $GITHUB_OUTPUT

      - name: Cache Lexer and Parser
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        id: cache-lexer-parser
        with:
          path: ${{ github.workspace }}/src/main/gen
          key: lexer-parser-${{ hashFiles('**/Sql.bnf','**/Sql.flex') }}
          restore-keys: |
            lexer-parser-

      - name: Generate Lexer
        if: steps.cache-lexer-parser.outputs.cache-hit != 'true'
        run: ./gradlew generateLexer

      - name: Generate Parser
        if: steps.cache-lexer-parser.outputs.cache-hit != 'true'
        run: ./gradlew generateParser

      - name: Build Gradle
        run: ./gradlew build -x test

      - name: Get latest draft release title
        run: |
          TITLE=$(gh api repos/${{ github.repository }}/releases \
            --jq '.[] | select(.draft==true) | .name' | head -n 1)
          if [[ -z "$TITLE" ]]; then
            echo "No draft release found."
            exit 1
          fi      
          VERSION=$(echo "$TITLE" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          if [[ -z "$VERSION" ]]; then
            echo "No version found in version."
            exit 1
          fi
          echo "Extracted version: $VERSION"
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build plugin
        run: ./gradlew buildPlugin -PpluginVersion=$RELEASE_VERSION-beta-${{ github.run_number }}

      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=$(ls *.zip)
          unzip "$FILENAME" -d content
          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./build/distributions/content/*/*

  test:
    name: Test
    needs: [ build ]
    runs-on: ubuntu-24.04
    steps:
      - name: Fetch Sources
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@748248ddd2a24f49513d8f472f81c3a07d4d50e1 # v4
        with:
          cache-read-only: true

      - name: Cache Lexer and Parser
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        id: cache-lexer-parser
        with:
          path: ${{ github.workspace }}/src/main/gen
          key: lexer-parser-${{ hashFiles('**/Sql.bnf','**/Sql.flex') }}
          restore-keys: |
            lexer-parser-

      - name: Generate Lexer
        if: steps.cache-lexer-parser.outputs.cache-hit != 'true'
        run: ./gradlew generateLexer

      - name: Generate Parser
        if: steps.cache-lexer-parser.outputs.cache-hit != 'true'
        run: ./gradlew generateParser

      # Run tests
      - name: Run Tests
        run: ./gradlew check

      - name: Collect Tests Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: tests-result
          path: ${{ github.workspace }}/build/reports/tests

      - name: Upload Code Coverage Report
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        with:
          files: ${{ github.workspace }}/build/reports/kover/report.xml

  verify:
    name: Verify plugin
    needs: [ build ]
    runs-on: ubuntu-24.04
    steps:
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          large-packages: false

      - name: Fetch Sources
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@748248ddd2a24f49513d8f472f81c3a07d4d50e1 # v4
        with:
          cache-read-only: true

      - name: Cache Lexer and Parser
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        id: cache-lexer-parser
        with:
          path: ${{ github.workspace }}/src/main/gen
          key: lexer-parser-${{ hashFiles('**/Sql.bnf','**/Sql.flex') }}
          restore-keys: |
            lexer-parser-

      - name: Generate Lexer
        if: steps.cache-lexer-parser.outputs.cache-hit != 'true'
        run: ./gradlew generateLexer

      - name: Generate Parser
        if: steps.cache-lexer-parser.outputs.cache-hit != 'true'
        run: ./gradlew generateParser

      - name: Setup Plugin Verifier IDEs Cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: ${{ needs.build.outputs.pluginVerifierHomeDir }}/ides
          key: plugin-verifier-${{ hashFiles('build/listProductsReleases.txt') }}

      - name: Run Plugin Verification tasks
        run: ./gradlew verifyPlugin -Dplugin.verifier.home.dir=${{ needs.build.outputs.pluginVerifierHomeDir }}

      - name: Collect Plugin Verifier Result
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: pluginVerifier-result
          path: ${{ github.workspace }}/build/reports/pluginVerifier
