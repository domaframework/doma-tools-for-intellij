jump.to.sql.tooltip.title=Open SQL file
jump.to.dao.tooltip.title=Jump to DAO method definition
generate.sql.quickfix.title=Create SQL file
config.enable.sql.format=Enable auto-indent for SQL
inspection.invalid.dao.notExistSql=SQL file does not exist
inspection.invalid.sql.property=The field or method [{1}] does not exist in the class [{0}]
inspection.invalid.dao.paramUse=There are unused parameters in the SQL [{0}]
inspection.invalid.dao.parameter=The bind variable [{1}] does not exist in the DAO method [{0}]
inspection.invalid.sql.topType=Can't get type of first element
inspection.invalid.sql.staticProperty=[{0}] is not a public or static property in the class [{1}]
inspection.invalid.sql.testdata=Test data is required after a bind variable directive or a literal variable directive
inspection.invalid.sql.expand=Asterisk is required after expand variable
inspection.invalid.sql.classpath=A non-existent package or class name was specified [{0}]
inspection.invalid.sql.iterable=The type that can be used in the loop directive is an Iterable type
inspection.invalid.dao.duplicate=An element name that is a duplicate of an element name defined in SQL is used
inspection.invalid.sql.notFound.customFunction=Custom function [{0}] not found in class [{1}]
inspection.invalid.sql.notFound.expressionClass=An invalid ExpressionFunctions implementation class is configured in doma.compile.config
inspection.invalid.dao.returnType.psiTypes=The return type must be "{0}"
inspection.invalid.dao.returnType.invalid=The return type {0} is invalid
inspection.invalid.dao.select.returnType.strategy=The return type must match the "{0}" type parameter "{1}"
inspection.invalid.dao.update.returnType.returning=When "returning = @Returning" is specified, the return type must be "{0}" or Optional<{0}>
inspection.invalid.dao.sqlProcessor.returnType.returning=The return type "{0}" is not the same as the third type argument "{1}" of BiFunction
inspection.invalid.dao.multiInsert.returnType.returning=When "returning = @Returning" is specified, the return type must be List<{0}>
inspection.invalid.dao.select.param.strategy.require.type=When you specify SelectType.{0} for the strategy element of @Select, the "{1}" parameter is required for the method
inspection.invalid.dao.select.param.notFound.strategy.stream=When you use the "java.util.function.Function" parameter, SelectStrategyType.STREAM must be specified for the strategy element of @Select
inspection.invalid.dao.returnType.immutable=If a method annotated with @{0} targets immutable entities for insertion, the return type must be {1}<{2}>
inspection.invalid.dao.params.count=The number of parameters must be one
inspection.invalid.dao.params.empty=The number of parameters must be zero
inspection.invalid.dao.params.type=The parameter type must be {0}
inspection.invalid.dao.procedure.params.type=The parameter type annotated with @{0} must be "{1}"
inspection.invalid.dao.params.require.type=When you annotate the method with @{0}, the {1} parameter is required for the method
inspection.invalid.dao.params.require.iterable.entity=The argument must be an Iterable subclass that has an Entity class as a parameter
inspection.invalid.dao.procedure.params.require.annotation=The parameters of the method annotated with @Function or @Procedure must be annotated with either of @In, @InOut, @Out or @ResultSet
inspection.invalid.dao.procedure.params.in.type={0} is not supported as the type of the parameter annotated with @In
inspection.invalid.dao.procedure.params.support.generic.param="{0}" is illegal as the type argument of "{1}"
inspection.invalid.dao.sqlProcessor.params.biFunction.param.first=The first type argument of BiFunction must be "{0}"
inspection.invalid.dao.sqlProcessor.params.biFunction.param.second=The second type argument of BiFunction must be "{0}"
inspection.invalid.dao.sqlProcessor.params.biFunction.param.invalid=The type argument at index {0} is not supported
inspection.invalid.dao.annotation.option.field=Field ''{0}'' specified in ''{1}'' option does not exist in {2}. Available fields: [{3}]
